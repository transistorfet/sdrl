
current:	* Changed bindings to store void * instead of specific struct pointers
		* Changed bindings function names
		* Added event.c continuation manager
		* Converted code to use continuations instead of recursion
		* Added heap.c heap memory manager
		* Modified bindings to pass sdrl_heap to destroy function
		* Modified value.c and type.c to allocate from a heap (passed during calls)
		* Added sdrl_duplicate_expr function to expr.c
		* Added line number information to expr
		* Added reference counting support
		* Moved parse functions to read in various strings/numbers to input.c
		* Moved the parsing core to lib/ and enabled the parser to be specified by a parameter
		* Added reference count to environments
		* Added sdrl_retract_environment to free only the topmost environment
		* Put a reference to the environment in sdrl_event (so no more environment popping)
		* Broke prims.c into a proper library (libbase)
		* Converted Makefiles to used Autobuilder
		* Fixed memory leaks caused by if (now values passed to sdrl_call_value are destroyed)
		* Moved includes to include/sdrl
		* Added error reporting module
		* Added environment type as well as lookup (%) function for resolving values in an environment

v0.2:		* Converted all function names to sdrl_*
		* Converted code to compile file into an AST before executing
		* Added expr.c for AST functions
		* Added type.c for advanced user-definable types (all types must be defined using it)
		* Changed bindings/environments to bind types as well as values
		* Removed the knowledge of special types from value
		* Integrated sdrl_make_* into a single generic sdrl_make_value function
		* Changed error names in error.h
		* Changed io.* to input.* (since it only handles input)
		* Changed default behaviour of a name to return the name instead of resolving the binding of that name
		* Removed the { } syntax from the parser
		* Changed many primative form/builtin names (no longer entirely symbolic)
		* Added scheme functions library
		* Added pattern.c for pattern matching
		* Changed types.h to globals.h

v0.1:		Initial Writing



